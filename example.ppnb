{
  "cells": [
    {
      "cell_type": "markdown",
      "id": "intro-cell",
      "metadata": {},
      "source": [
        "# Welcome to Prompter!\n",
        "\n",
        "This is a VSCode extension that allows you to create and run code cells, similar to Jupyter notebooks.\n",
        "\n",
        "## Features\n",
        "- Support for multiple programming languages\n",
        "- Run individual cells with Ctrl+Enter\n",
        "- Run all cells with Ctrl+Shift+Enter\n",
        "- Real-time output display"
      ]
    },
    {
      "cell_type": "prompt",
      "id": "prompt-example",
      "metadata": {
        "cellType": "prompt"
      },
      "source": [
        "请帮我写一个计算斐波那契数列的函数，要求：\n",
        "1. 使用递归实现\n",
        "2. 添加适当的注释\n",
        "3. 包含输入验证\n",
        "4. 支持计算前10个斐波那契数"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "prompt",
      "id": "prompt-cell-1755102371615",
      "metadata": {
        "cellType": "prompt"
      },
      "source": [
        "this is a prompt."
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "prompt",
      "id": "prompt-cell-1755102536817",
      "metadata": {
        "cellType": "prompt"
      },
      "source": [
        "helloworld， this is a prompt."
      ]
    },
    {
      "cell_type": "code",
      "id": "js-example",
      "metadata": {},
      "source": [
        "// JavaScript Example\n",
        "console.log('Hello from JavaScript!');\n",
        "\n",
        "const numbers = [1, 2, 3, 4, 5];\n",
        "const doubled = numbers.map(n => n * 2);\n",
        "console.log('Doubled numbers:', doubled);"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "id": "python-example",
      "metadata": {},
      "source": [
        "# Python Example\n",
        "print('Hello from Python!')\n",
        "\n",
        "import math\n",
        "\n",
        "def fibonacci(n):\n",
        "    if n <= 1:\n",
        "        return n\n",
        "    return fibonacci(n-1) + fibonacci(n-2)\n",
        "\n",
        "for i in range(10):\n",
        "    print(f'Fibonacci({i}) = {fibonacci(i)}')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "id": "bash-example",
      "metadata": {},
      "source": [
        "# Bash Example\n",
        "echo \"Hello from Bash!\"\n",
        "echo \"Current directory: $(pwd)\"\n",
        "echo \"Files in current directory:\"\n",
        "ls -la"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "id": "usage-instructions",
      "metadata": {},
      "source": [
        "## How to Use\n",
        "\n",
        "1. **Create a new notebook**: Use the command palette (Ctrl+Shift+P) and search for \"Create New Prompter Notebook\"\n",
        "2. **Add code cells**: Each cell can contain code in different languages\n",
        "3. **Add prompt cells**: Use the \"Create Prompt Cell\" button to add prompt/instruction cells\n",
        "4. **Run cells**: Press Ctrl+Enter to run the current cell, or Ctrl+Shift+Enter to run all cells\n",
        "5. **View output**: Results will appear below each cell\n",
        "\n",
        "## Cell Types\n",
        "- **Code cells**: Execute code in various programming languages\n",
        "- **Markdown cells**: Rich text documentation and explanations\n",
        "- **Prompt cells**: Instructions, prompts, or requirements for AI assistance\n",
        "\n",
        "## Supported Languages\n",
        "- JavaScript/TypeScript\n",
        "- Python\n",
        "- Bash/Shell\n",
        "- PowerShell\n",
        "\n",
        "Enjoy coding with Prompter!"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Multi-Language",
      "language": "multi",
      "name": "prompter"
    },
    "language_info": {
      "name": "multi",
      "version": "1.0.0"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}