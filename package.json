{
  "name": "prompter-vscode",
  "displayName": "Prompter - Code Runner",
  "description": "A VSCode extension for editing and running code snippets, similar to Jupyter notebooks",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:prompter.createNotebook",
    "onCommand:prompter.runCell",
    "onCommand:prompter.createPromptCell",
    "onCommand:prompter.createPromptCellAbove",
    "onCommand:prompter.createPromptCellBelow",
    "onLanguage:prompt",
    "onNotebook:prompter-notebook",
    "onCommand:prompter.saveNotebook",
    "onCommand:prompter.configureLLM",
    "onCommand:prompter.openLLMConfig"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "Prompter",
      "properties": {
        "prompter.llmProvider": {
          "type": "string",
          "enum": [
            "openai",
            "deepseek",
            "qwen",
            "anthropic",
            "gemini",
            "mistral"
          ],
          "default": "openai",
          "description": "LLM provider to use for prompt cells"
        },
        "prompter.llmModel": {
          "type": "string",
          "default": "gpt-3.5-turbo",
          "description": "LLM model to use for prompt cells"
        },
        "prompter.openaiApiKey": {
          "type": "string",
          "default": "",
          "description": "OpenAI API Key"
        },
        "prompter.deepseekApiKey": {
          "type": "string",
          "default": "",
          "description": "Deepseek API Key"
        },
        "prompter.qwenApiKey": {
          "type": "string",
          "default": "",
          "description": "Qwen API Key"
        },
        "prompter.anthropicApiKey": {
          "type": "string",
          "default": "",
          "description": "Anthropic API Key"
        },
        "prompter.geminiApiKey": {
          "type": "string",
          "default": "",
          "description": "Google Gemini API Key"
        },
        "prompter.mistralApiKey": {
          "type": "string",
          "default": "",
          "description": "Mistral API Key"
        },
        "prompter.temperature": {
          "type": "number",
          "default": 0.7,
          "minimum": 0,
          "maximum": 2,
          "description": "Temperature for LLM responses (0-2)"
        },
        "prompter.maxTokens": {
          "type": "number",
          "default": 1000,
          "minimum": 1,
          "description": "Maximum tokens for LLM responses"
        },
        "prompter.defaultCodeLanguage": {
          "type": "string",
          "enum": [
            "javascript",
            "typescript",
            "python",
            "java",
            "csharp",
            "cpp",
            "c",
            "go",
            "rust",
            "php",
            "ruby",
            "swift",
            "kotlin",
            "scala",
            "html",
            "css",
            "json",
            "xml",
            "yaml",
            "markdown",
            "bash",
            "powershell",
            "sql"
          ],
          "default": "javascript",
          "description": "Default language for new code cells"
        }
      }
    },
    "commands": [
      {
        "command": "prompter.createPromptCell",
        "title": "Prompt",
        "category": "Prompter",
        "icon": "$(comment-discussion)"
      },
      {
        "command": "prompter.createPromptCellAbove",
        "title": "Create Prompt Cell Above",
        "category": "Prompter",
        "icon": "$(add)"
      },
      {
        "command": "prompter.createPromptCellBelow",
        "title": "Create Prompt Cell Below",
        "category": "Prompter",
        "icon": "$(add)"
      },
      {
        "command": "prompter.createCodeCell",
        "title": "Code",
        "category": "Prompter",
        "icon": "$(code)"
      },
      {
        "command": "prompter.createNotebook",
        "title": "Create New Prompter Notebook",
        "category": "Prompter"
      },
      {
        "command": "prompter.runCell",
        "title": "Run Cell",
        "category": "Prompter"
      },
      {
        "command": "prompter.runAllCells",
        "title": "Run All Cells",
        "category": "Prompter"
      },
      {
        "command": "prompter.setProvider",
        "title": "Set LLM Provider",
        "category": "Prompter"
      },
      {
        "command": "prompter.setApiKey",
        "title": "Set API Key for Current Provider",
        "category": "Prompter"
      },
      {
        "command": "prompter.setModel",
        "title": "Set LLM Model",
        "category": "Prompter"
      },
      {
        "command": "prompter.saveNotebook",
        "title": "Save Notebook",
        "category": "Prompter"
      },
      {
        "command": "prompter.configureLLM",
        "title": "Configure LLM Settings",
        "category": "Prompter"
      },
      {
        "command": "prompter.openLLMConfig",
        "title": "Open LLM Configuration Page",
        "category": "Prompter",
        "icon": "$(settings-gear)"
      },
      {
        "command": "prompter.llmConfig.focus",
        "title": "Focus LLM Configuration Panel",
        "category": "Prompter"
      },
      {
        "command": "prompter.setDefaultCodeLanguage",
        "title": "Set Default Code Language",
        "category": "Prompter",
        "icon": "$(code)"
      },
      {
        "command": "prompter.setCellType",
        "title": "Set Cell Type",
        "category": "Prompter",
        "icon": "$(symbol-class)"
      }
    ],
    "languages": [
      {
        "id": "prompter",
        "aliases": [
          "Prompter",
          "prompter"
        ],
        "extensions": [
          ".ppnb"
        ],
        "configuration": "./language-configuration.json"
      },
      {
        "id": "prompt",
        "aliases": [
          "Prompt",
          "prompt",
          "AI Prompt"
        ],
        "extensions": [],
        "configuration": "./prompt-language-configuration.json",
        "mimetypes": [
          "text/x-prompt"
        ]
      }
    ],
    "grammars": [
      {
        "language": "prompter",
        "scopeName": "source.prompter",
        "path": "./syntaxes/prompter.tmLanguage.json"
      },
      {
        "language": "prompt",
        "scopeName": "text.prompt",
        "path": "./syntaxes/prompt.tmLanguage.json"
      }
    ],
    "keybindings": [
      {
        "command": "prompter.runCell",
        "key": "ctrl+enter",
        "when": "editorTextFocus && resourceExtname == '.ppnb'"
      },
      {
        "command": "prompter.runAllCells",
        "key": "ctrl+shift+enter",
        "when": "editorTextFocus && resourceExtname == '.ppnb'"
      }
    ],
    "notebooks": [
      {
        "type": "prompter-notebook",
        "displayName": "Prompter Notebook",
        "selector": [
          {
            "filenamePattern": "*.ppnb"
          }
        ]
      }
    ],
    "viewsContainers": {
      "panel": [
        {
          "id": "prompter-panel",
          "title": "Prompter",
          "icon": "$(sparkle)"
        }
      ]
    },
    "views": {
      "prompter-panel": [
        {
          "id": "prompter.llmConfig",
          "name": "LLM Configuration",
          "type": "webview",
          "icon": "$(sparkle)",
          "when": "true"
        }
      ]
    },
    "menus": {
      "editor/context": [
        {
          "when": "resourceExtname == '.ppnb'",
          "command": "prompter.runCell",
          "group": "prompter"
        }
      ],
      "notebook/toolbar": [
        {
          "command": "prompter.createPromptCell",
          "when": "notebookType == 'prompter-notebook'",
          "group": "navigation/add@-100"
        },
        {
          "command": "prompter.createCodeCell",
          "when": "notebookType == 'prompter-notebook'",
          "group": "navigation/add@-99"
        }
      ],
      "notebook/cell/title": [
        {
          "command": "prompter.setCellType",
          "when": "notebookType == 'prompter-notebook'",
          "group": "inline@1"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./"
  },
  "devDependencies": {
    "@types/axios": "^0.9.36",
    "@types/form-data": "^2.2.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "typescript": "^4.9.4"
  },
  "dependencies": {
    "@types/uuid": "^10.0.0",
    "axios": "^1.11.0",
    "uuid": "^11.1.0"
  }
}
